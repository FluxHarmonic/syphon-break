(define-module (flux-harmonic syphon-break)
  (import (mesche fs)
          (mesche list)
          (mesche string)
          (mesche process)
          (mesche build)
          (mesche project)))

(project :name "Syphon Break"
         :url "https://github.com/FluxHarmonic/syphon-break"
         :version "0.0.1"
         :description "How long can you survive before energy runs out?"

         :deps (list (mesche-lib "mesche-lang/compiler")
                     (mesche-lib "substratic/engine"))

         :configs (list (config :name "dev"
                                :default t
                                :output-path "./bin/dev"
                                :c-flags "-O0 -g -ggdb -DDEV_BUILD -fsanitize=address")

                        (config :name "debug"
                                :output-path "./bin/debug"
                                :c-flags "-O0 -g -ggdb -DDEBUG")

                        (config :name "release"
                                :output-path "./bin/release"
                                :c-flags "-O2 -fPIE"))

         :targets (list (target :name "main"
                                :default t
                                :runs (steps
                                       ;; Build library dependencies
                                       (build-project "deps/mesche-lang/compiler/project.msc" :target "lib")
                                       (build-project "deps/substratic/engine/project.msc" :target "lib")

                                       ;; Build the game source
                                       (compile-source :source-files (list "main.c")
                                                       :mesche-main "modules/main.msc")

                                       ;; Build and link CLI source files
                                       (link-program "syphon-break")))

                        (target :name "dist"
                                :runs (steps (build-target "main")
                                             (lambda (project config outputs)
                                               ;; TODO: Clean existing dist folder?
                                               (path-ensure "./dist")
                                               (process-start-sync (string-append "cp "
                                                                                  (project-config-output-path config)
                                                                                  "/syphon-break "
                                                                                  "dist/"))
                                               (process-start-sync "cp -R ./modules ./dist")
                                               (process-start-sync "cp -R ./assets ./dist")
                                               (process-start-sync "cp -R ./deps/substratic/engine/modules/substratic ./dist/modules")
                                               nil)))))
